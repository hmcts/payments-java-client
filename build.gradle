import org.gradle.api.artifacts.ComponentSelection
import java.io.File

plugins {
    id 'checkstyle'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.springframework.boot' version '3.2.4'
    id 'com.github.ben-manes.versions' version '0.52.0'
    id 'java-library'
    id 'maven-publish'
}

// This will pick up the version number from release tag
def buildNumber = System.getenv("RELEASE_VERSION")?.replace("refs/tags/", "") ?: "DEV-SNAPSHOT"

group = 'com.github.hmcts'
version = buildNumber

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

checkstyle {
    maxWarnings = 0
    toolVersion = '11.0.1'
    getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc).configureEach {
    options.addStringOption('Xdoclint:none', '-quiet')
}

tasks.register('sourcesJar', Jar) {
    dependsOn classes
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

tasks.register('javadocJar', Jar) {
    dependsOn javadoc
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

jar {
    manifest {
        attributes 'Implementation-Title': project.name, 'Implementation-Version': project.version
    }
}

task printVersion {
    doLast {
        print project.version
    }
}

def gitRepo = "https://github.com/hmcts/payments-java-client"

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

tasks.withType(JavaExec).configureEach {
    javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

test {
    useJUnitPlatform()
}

ext {
    lombokVersion = '1.18.40'
    springCloudVersion = '2023.0.6'
    feignVersion = '13.6'
}

def versions = [
        junitJupiter     : '5.13.4'
]

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

sourceSets {
    functionalTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir('src/functionalTest/java')
        }
        resources {
            srcDir('src/functionalTest/resources')
        }
    }
}

configurations {
    functionalTestImplementation.extendsFrom testImplementation
    functionalTestRuntimeOnly.extendsFrom testRuntimeOnly
}

task functionalTest(type: Test) {
    description = 'Runs functional tests.'
    group = 'verification'

    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    include "uk/gov/hmcts/reform/payments/client/functional/**"

    useJUnitPlatform()
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = 'https://repo.spring.io/libs-milestone' }
    maven { url = 'https://pkgs.dev.azure.com/hmcts/Artifacts/_packaging/hmcts-lib/maven/v1' }
}

dependencies {
    api group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'
    api group: 'io.github.openfeign', name: 'feign-jackson', version: feignVersion

    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion

    implementation group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.18.0'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation (group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: '5.3.3') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: versions.junitJupiter
    testImplementation group: 'com.github.tomakehurst', name: 'wiremock-jre8-standalone', version: '3.0.1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.13.4'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'

    functionalTestImplementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: '5.3.3'
    functionalTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    functionalTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
}

tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorPath = configurations.annotationProcessor
    options.encoding = 'UTF-8'
}

tasks.withType(Copy).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

def pomConfig = {
    licenses {
        license {
            name "MIT License"
            url "http://www.opensource.org/licenses/mit-license.php"
            distribution "repo"
        }
    }

    scm {
        url "https://github.com/hmcts/payments-java-client"
    }
}

publishing {
    publications {
        Main(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId = project.group
            artifactId = 'payments-java-client'
            version = project.version

            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Client library for communicating with payments api')
                root.appendNode('name', 'Payments client')
                root.appendNode('url', gitRepo)
                root.children().last() + pomConfig
            }
        }
    }
    repositories {
        maven {
            name = "AzureArtifacts"
            url = uri("https://pkgs.dev.azure.com/hmcts/Artifacts/_packaging/hmcts-lib/maven/v1")
            credentials {
                username = System.getenv("AZURE_DEVOPS_ARTIFACT_USERNAME")
                password = System.getenv("AZURE_DEVOPS_ARTIFACT_TOKEN")
            }
        }
    }
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}